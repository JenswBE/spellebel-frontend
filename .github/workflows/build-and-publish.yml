name: Build and publish
on:
  push:
    branches: [main]
    tags:
      - '*'

env:
  DOCKER_HUB_USER: jenswbebot
  DOCKER_HUB_REPO: jenswbe/spellebel-frontend

jobs:
  build-and-publish:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2.4.0

      - name: Derive docker_tag
        id: vars
        shell: python
        run: |
          import os, re, sys
          tag = os.environ['GITHUB_REF'].split('/').pop()
          print(f"Tag: {tag}")
          semverRegex = r"^v\d+\.\d+\.\d+$"
          if tag == 'main':
            tags = ['latest']
            container_name = "spellebel"
          elif re.match(semverRegex, tag):
            tag_parts = tag.split(".")
            tags = ['stable', tag, tag_parts[0], f"{tag_parts[0]}.{tag_parts[1]}"]
            container_name = "spellebel-test"
          else:
            sys.exit(f"Invalid tag {tag}. Must be main or a semver tag")
          images = []
          image_base = os.environ['DOCKER_HUB_REPO']
          images = [f"{image_base}:{t}" for t in tags]
          images_list = ",".join(images)
          print(f"Images: {images_list}")
          print(f"Container name: {container_name}")
          print(f"::set-output name=images::{images_list}")
          print(f"::set-output name=container_name::{container_name}")

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1.6.0

      - name: Login to DockerHub
        uses: docker/login-action@v1.10.0
        with:
          username: ${{ env.DOCKER_HUB_USER }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: Build and push
        uses: docker/build-push-action@v2.7.0
        with:
          push: true
          tags: ${{ steps.vars.outputs.images }}

      - name: Request pull and restart on server
        run: |
          curl --fail --verbose --header "API-KEY: ${DRPR_API_KEY:?}" -X POST "https://drpr-eve.jensw.be/${CONTAINER_NAME:?}/pull_restart/"
        env:
          CONTAINER_NAME: ${{ steps.vars.outputs.container_name }}
